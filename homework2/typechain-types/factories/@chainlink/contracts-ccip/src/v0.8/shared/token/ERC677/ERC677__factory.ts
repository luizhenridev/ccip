/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../../common";
import type {
  ERC677,
  ERC677Interface,
} from "../../../../../../../../@chainlink/contracts-ccip/src/v0.8/shared/token/ERC677/ERC677";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transferAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b5060405162001b3438038062001b348339818101604052810190620000369190620001eb565b81818160039081620000499190620004a5565b5080600490816200005b9190620004a5565b505050505062000589565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620000c7826200007f565b810181811067ffffffffffffffff82111715620000e957620000e86200008f565b5b80604052505050565b5f620000fd62000066565b90506200010b8282620000bc565b919050565b5f67ffffffffffffffff8211156200012d576200012c6200008f565b5b62000138826200007f565b9050602081019050919050565b5f5b838110156200016457808201518184015260208101905062000147565b5f8484015250505050565b5f620001856200017f8462000110565b620000f2565b905082815260208101848484011115620001a457620001a36200007b565b5b620001b184828562000145565b509392505050565b5f82601f830112620001d057620001cf62000077565b5b8151620001e28482602086016200016f565b91505092915050565b5f80604083850312156200020457620002036200006f565b5b5f83015167ffffffffffffffff81111562000224576200022362000073565b5b6200023285828601620001b9565b925050602083015167ffffffffffffffff81111562000256576200025562000073565b5b6200026485828601620001b9565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002bd57607f821691505b602082108103620002d357620002d262000278565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002fa565b620003438683620002fa565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200038d6200038762000381846200035b565b62000364565b6200035b565b9050919050565b5f819050919050565b620003a8836200036d565b620003c0620003b78262000394565b84845462000306565b825550505050565b5f90565b620003d6620003c8565b620003e38184846200039d565b505050565b5b818110156200040a57620003fe5f82620003cc565b600181019050620003e9565b5050565b601f82111562000459576200042381620002d9565b6200042e84620002eb565b810160208510156200043e578190505b620004566200044d85620002eb565b830182620003e8565b50505b505050565b5f82821c905092915050565b5f6200047b5f19846008026200045e565b1980831691505092915050565b5f6200049583836200046a565b9150826002028217905092915050565b620004b0826200026e565b67ffffffffffffffff811115620004cc57620004cb6200008f565b5b620004d88254620002a5565b620004e58282856200040e565b5f60209050601f8311600181146200051b575f841562000506578287015190505b62000512858262000488565b86555062000581565b601f1984166200052b86620002d9565b5f5b8281101562000554578489015182556001820191506020850194506020810190506200052d565b8683101562000574578489015162000570601f8916826200046a565b8355505b6001600288020188555050505b505050505050565b61159d80620005975f395ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c80634000aea01161006f5780634000aea0146101a057806370a08231146101d057806395d89b4114610200578063a457c2d71461021e578063a9059cbb1461024e578063dd62ed3e1461027e576100b2565b806306fdde03146100b6578063095ea7b3146100d457806318160ddd1461010457806323b872dd14610122578063313ce567146101525780633950935114610170575b5f80fd5b6100be6102ae565b6040516100cb9190610c47565b60405180910390f35b6100ee60048036038101906100e99190610d05565b61033e565b6040516100fb9190610d5d565b60405180910390f35b61010c610360565b6040516101199190610d85565b60405180910390f35b61013c60048036038101906101379190610d9e565b610369565b6040516101499190610d5d565b60405180910390f35b61015a610397565b6040516101679190610e09565b60405180910390f35b61018a60048036038101906101859190610d05565b61039f565b6040516101979190610d5d565b60405180910390f35b6101ba60048036038101906101b59190610f4e565b6103d5565b6040516101c79190610d5d565b60405180910390f35b6101ea60048036038101906101e59190610fba565b6104e2565b6040516101f79190610d85565b60405180910390f35b610208610527565b6040516102159190610c47565b60405180910390f35b61023860048036038101906102339190610d05565b6105b7565b6040516102459190610d5d565b60405180910390f35b61026860048036038101906102639190610d05565b61062c565b6040516102759190610d5d565b60405180910390f35b61029860048036038101906102939190610fe5565b61064e565b6040516102a59190610d85565b60405180910390f35b6060600380546102bd90611050565b80601f01602080910402602001604051908101604052809291908181526020018280546102e990611050565b80156103345780601f1061030b57610100808354040283529160200191610334565b820191905f5260205f20905b81548152906001019060200180831161031757829003601f168201915b5050505050905090565b5f806103486106d0565b90506103558185856106d7565b600191505092915050565b5f600254905090565b5f806103736106d0565b905061038085828561089a565b61038b858585610925565b60019150509392505050565b5f6012905090565b5f806103a96106d0565b90506103ca8185856103bb858961064e565b6103c591906110ad565b6106d7565b600191505092915050565b5f6103e0848461062c565b508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c168585604051610440929190611132565b60405180910390a36104678473ffffffffffffffffffffffffffffffffffffffff16610b91565b156104d7578373ffffffffffffffffffffffffffffffffffffffff1663a4c0ed363385856040518463ffffffff1660e01b81526004016104a99392919061116f565b5f604051808303815f87803b1580156104c0575f80fd5b505af11580156104d2573d5f803e3d5ffd5b505050505b600190509392505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461053690611050565b80601f016020809104026020016040519081016040528092919081815260200182805461056290611050565b80156105ad5780601f10610584576101008083540402835291602001916105ad565b820191905f5260205f20905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b5f806105c16106d0565b90505f6105ce828661064e565b905083811015610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a9061121b565b60405180910390fd5b61062082868684036106d7565b60019250505092915050565b5f806106366106d0565b9050610643818585610925565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610745576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073c906112a9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107aa90611337565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161088d9190610d85565b60405180910390a3505050565b5f6108a5848461064e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461091f5781811015610911576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109089061139f565b60405180910390fd5b61091e84848484036106d7565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610993576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098a9061142d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a01576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f8906114bb565b60405180910390fd5b610a0c838383610bb3565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610a8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8690611549565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b789190610d85565b60405180910390a3610b8b848484610bb8565b50505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610bf4578082015181840152602081019050610bd9565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610c1982610bbd565b610c238185610bc7565b9350610c33818560208601610bd7565b610c3c81610bff565b840191505092915050565b5f6020820190508181035f830152610c5f8184610c0f565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ca182610c78565b9050919050565b610cb181610c97565b8114610cbb575f80fd5b50565b5f81359050610ccc81610ca8565b92915050565b5f819050919050565b610ce481610cd2565b8114610cee575f80fd5b50565b5f81359050610cff81610cdb565b92915050565b5f8060408385031215610d1b57610d1a610c70565b5b5f610d2885828601610cbe565b9250506020610d3985828601610cf1565b9150509250929050565b5f8115159050919050565b610d5781610d43565b82525050565b5f602082019050610d705f830184610d4e565b92915050565b610d7f81610cd2565b82525050565b5f602082019050610d985f830184610d76565b92915050565b5f805f60608486031215610db557610db4610c70565b5b5f610dc286828701610cbe565b9350506020610dd386828701610cbe565b9250506040610de486828701610cf1565b9150509250925092565b5f60ff82169050919050565b610e0381610dee565b82525050565b5f602082019050610e1c5f830184610dfa565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610e6082610bff565b810181811067ffffffffffffffff82111715610e7f57610e7e610e2a565b5b80604052505050565b5f610e91610c67565b9050610e9d8282610e57565b919050565b5f67ffffffffffffffff821115610ebc57610ebb610e2a565b5b610ec582610bff565b9050602081019050919050565b828183375f83830152505050565b5f610ef2610eed84610ea2565b610e88565b905082815260208101848484011115610f0e57610f0d610e26565b5b610f19848285610ed2565b509392505050565b5f82601f830112610f3557610f34610e22565b5b8135610f45848260208601610ee0565b91505092915050565b5f805f60608486031215610f6557610f64610c70565b5b5f610f7286828701610cbe565b9350506020610f8386828701610cf1565b925050604084013567ffffffffffffffff811115610fa457610fa3610c74565b5b610fb086828701610f21565b9150509250925092565b5f60208284031215610fcf57610fce610c70565b5b5f610fdc84828501610cbe565b91505092915050565b5f8060408385031215610ffb57610ffa610c70565b5b5f61100885828601610cbe565b925050602061101985828601610cbe565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061106757607f821691505b60208210810361107a57611079611023565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6110b782610cd2565b91506110c283610cd2565b92508282019050808211156110da576110d9611080565b5b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f611104826110e0565b61110e81856110ea565b935061111e818560208601610bd7565b61112781610bff565b840191505092915050565b5f6040820190506111455f830185610d76565b818103602083015261115781846110fa565b90509392505050565b61116981610c97565b82525050565b5f6060820190506111825f830186611160565b61118f6020830185610d76565b81810360408301526111a181846110fa565b9050949350505050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f611205602583610bc7565b9150611210826111ab565b604082019050919050565b5f6020820190508181035f830152611232816111f9565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f611293602483610bc7565b915061129e82611239565b604082019050919050565b5f6020820190508181035f8301526112c081611287565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f611321602283610bc7565b915061132c826112c7565b604082019050919050565b5f6020820190508181035f83015261134e81611315565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f611389601d83610bc7565b915061139482611355565b602082019050919050565b5f6020820190508181035f8301526113b68161137d565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f611417602583610bc7565b9150611422826113bd565b604082019050919050565b5f6020820190508181035f8301526114448161140b565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6114a5602383610bc7565b91506114b08261144b565b604082019050919050565b5f6020820190508181035f8301526114d281611499565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f611533602683610bc7565b915061153e826114d9565b604082019050919050565b5f6020820190508181035f83015261156081611527565b905091905056fea2646970667358221220aea453cacc4f4aceb7e5940ef2481ebd56de049e8a0a741e1c07cb248dcc6c4064736f6c63430008140033";

type ERC677ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC677ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC677__factory extends ContractFactory {
  constructor(...args: ERC677ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC677> {
    return super.deploy(name, symbol, overrides || {}) as Promise<ERC677>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): ERC677 {
    return super.attach(address) as ERC677;
  }
  override connect(signer: Signer): ERC677__factory {
    return super.connect(signer) as ERC677__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC677Interface {
    return new utils.Interface(_abi) as ERC677Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC677 {
    return new Contract(address, _abi, signerOrProvider) as ERC677;
  }
}
