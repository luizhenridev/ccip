/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CrossChainNameServiceRegister,
  CrossChainNameServiceRegisterInterface,
} from "../../contracts/CrossChainNameServiceRegister";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "lookup",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "ccnsReceiverAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "enableChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "i_lookup",
    outputs: [
      {
        internalType: "contract ICrossChainNameServiceLookup",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_router",
    outputs: [
      {
        internalType: "contract IRouterClient",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_chains",
    outputs: [
      {
        internalType: "uint64",
        name: "chainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "ccnsReceiverAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c060405234801562000010575f80fd5b5060405162001aa338038062001aa3833981810160405281019062000036919062000334565b33805f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a190620003d7565b60405180910390fd5b815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146200012f576200012e81620001a260201b60201c565b5b5050508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050505062000465565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000213576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200020a9062000445565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002fe82620002d3565b9050919050565b6200031081620002f2565b81146200031b575f80fd5b50565b5f815190506200032e8162000305565b92915050565b5f80604083850312156200034d576200034c620002cf565b5b5f6200035c858286016200031e565b92505060206200036f858286016200031e565b9150509250929050565b5f82825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000005f82015250565b5f620003bf60188362000379565b9150620003cc8262000389565b602082019050919050565b5f6020820190508181035f830152620003f081620003b1565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c660000000000000000005f82015250565b5f6200042d60178362000379565b91506200043a82620003f7565b602082019050919050565b5f6020820190508181035f8301526200045e816200041f565b9050919050565b60805160a0516116076200049c5f395f81816105f0015261092001525f81816102c1015281816107d5015261081101526116075ff3fe608060405260043610610089575f3560e01c80638da5cb5b116100585780638da5cb5b1461013a578063b672356214610164578063e0b30b1f1461018c578063f2c298be146101b6578063f2fde38b146101de57610090565b806351cff8d914610094578063581bdd16146100bc5780635b54137d146100e657806379ba50971461012457610090565b3661009057005b5f80fd5b34801561009f575f80fd5b506100ba60048036038101906100b59190610c8f565b610206565b005b3480156100c7575f80fd5b506100d06102bf565b6040516100dd9190610d15565b60405180910390f35b3480156100f1575f80fd5b5061010c60048036038101906101079190610d61565b6102e3565b60405161011b93929190610dcc565b60405180910390f35b34801561012f575f80fd5b5061013861034a565b005b348015610145575f80fd5b5061014e6104d9565b60405161015b9190610e01565b60405180910390f35b34801561016f575f80fd5b5061018a60048036038101906101859190610e44565b610500565b005b348015610197575f80fd5b506101a06105ee565b6040516101ad9190610eb4565b60405180910390f35b3480156101c1575f80fd5b506101dc60048036038101906101d79190611009565b610612565b005b3480156101e9575f80fd5b5061020460048036038101906101ff9190610c8f565b6109aa565b005b61020e6109be565b5f4790505f8273ffffffffffffffffffffffffffffffffffffffff16826040516102379061107d565b5f6040518083038185875af1925050503d805f8114610271576040519150601f19603f3d011682016040523d82523d5f602084013e610276565b606091505b50509050806102ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b1906110eb565b60405180910390fd5b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600281815481106102f2575f80fd5b905f5260205f2090600202015f91509050805f015f9054906101000a900467ffffffffffffffff1690805f0160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905083565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d090611153565b60405180910390fd5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105086109be565b600260405180606001604052808567ffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506020820151815f0160086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600101555050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60028054905090505f5b8181101561091d575f6002828154811061063a57610639611171565b5b905f5260205f2090600202016040518060600160405290815f82015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020015f820160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090505f6040518060a0016040528083602001516040516020016107039190610e01565b6040516020818303038152906040528152602001863360405160200161072a929190611208565b60405160208183030381529060405281526020015f67ffffffffffffffff81111561075857610757610ee5565b5b60405190808252806020026020018201604052801561079157816020015b61077e610bf6565b8152602001906001900390816107765790505b5081526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020016107ce60405180602001604052808660400151815250610a4d565b81525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f97f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166320487ded855f0151856040518363ffffffff1660e01b815260040161086d929190611403565b602060405180830381865afa158015610888573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108ac9190611445565b845f0151846040518463ffffffff1660e01b81526004016108ce929190611403565b60206040518083038185885af11580156108ea573d5f803e3d5ffd5b50505050506040513d601f19601f8201168201806040525081019061090f91906114a3565b50826001019250505061061d565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631e59c52983336040518363ffffffff1660e01b8152600401610979929190611208565b5f604051808303815f87803b158015610990575f80fd5b505af11580156109a2573d5f803e3d5ffd5b505050505050565b6109b26109be565b6109bb81610acc565b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4290611518565b60405180910390fd5b565b60606397a657c960e01b82604051602401610a689190611550565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b31906115b3565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b60405180604001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81525090565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c5e82610c35565b9050919050565b610c6e81610c54565b8114610c78575f80fd5b50565b5f81359050610c8981610c65565b92915050565b5f60208284031215610ca457610ca3610c2d565b5b5f610cb184828501610c7b565b91505092915050565b5f819050919050565b5f610cdd610cd8610cd384610c35565b610cba565b610c35565b9050919050565b5f610cee82610cc3565b9050919050565b5f610cff82610ce4565b9050919050565b610d0f81610cf5565b82525050565b5f602082019050610d285f830184610d06565b92915050565b5f819050919050565b610d4081610d2e565b8114610d4a575f80fd5b50565b5f81359050610d5b81610d37565b92915050565b5f60208284031215610d7657610d75610c2d565b5b5f610d8384828501610d4d565b91505092915050565b5f67ffffffffffffffff82169050919050565b610da881610d8c565b82525050565b610db781610c54565b82525050565b610dc681610d2e565b82525050565b5f606082019050610ddf5f830186610d9f565b610dec6020830185610dae565b610df96040830184610dbd565b949350505050565b5f602082019050610e145f830184610dae565b92915050565b610e2381610d8c565b8114610e2d575f80fd5b50565b5f81359050610e3e81610e1a565b92915050565b5f805f60608486031215610e5b57610e5a610c2d565b5b5f610e6886828701610e30565b9350506020610e7986828701610c7b565b9250506040610e8a86828701610d4d565b9150509250925092565b5f610e9e82610ce4565b9050919050565b610eae81610e94565b82525050565b5f602082019050610ec75f830184610ea5565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610f1b82610ed5565b810181811067ffffffffffffffff82111715610f3a57610f39610ee5565b5b80604052505050565b5f610f4c610c24565b9050610f588282610f12565b919050565b5f67ffffffffffffffff821115610f7757610f76610ee5565b5b610f8082610ed5565b9050602081019050919050565b828183375f83830152505050565b5f610fad610fa884610f5d565b610f43565b905082815260208101848484011115610fc957610fc8610ed1565b5b610fd4848285610f8d565b509392505050565b5f82601f830112610ff057610fef610ecd565b5b8135611000848260208601610f9b565b91505092915050565b5f6020828403121561101e5761101d610c2d565b5b5f82013567ffffffffffffffff81111561103b5761103a610c31565b5b61104784828501610fdc565b91505092915050565b5f81905092915050565b50565b5f6110685f83611050565b91506110738261105a565b5f82019050919050565b5f6110878261105d565b9150819050919050565b5f82825260208201905092915050565b7f4661696c656420746f20776974686472617700000000000000000000000000005f82015250565b5f6110d5601283611091565b91506110e0826110a1565b602082019050919050565b5f6020820190508181035f830152611102816110c9565b9050919050565b7f4d7573742062652070726f706f736564206f776e6572000000000000000000005f82015250565b5f61113d601683611091565b915061114882611109565b602082019050919050565b5f6020820190508181035f83015261116a81611131565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f5b838110156111c55780820151818401526020810190506111aa565b5f8484015250505050565b5f6111da8261119e565b6111e48185611091565b93506111f48185602086016111a8565b6111fd81610ed5565b840191505092915050565b5f6040820190508181035f83015261122081856111d0565b905061122f6020830184610dae565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61125a82611236565b6112648185611240565b93506112748185602086016111a8565b61127d81610ed5565b840191505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6112ba81610c54565b82525050565b6112c981610d2e565b82525050565b604082015f8201516112e35f8501826112b1565b5060208201516112f660208501826112c0565b50505050565b5f61130783836112cf565b60408301905092915050565b5f602082019050919050565b5f61132982611288565b6113338185611292565b935061133e836112a2565b805f5b8381101561136e57815161135588826112fc565b975061136083611313565b925050600181019050611341565b5085935050505092915050565b5f60a083015f8301518482035f8601526113958282611250565b915050602083015184820360208601526113af8282611250565b915050604083015184820360408601526113c9828261131f565b91505060608301516113de60608601826112b1565b50608083015184820360808601526113f68282611250565b9150508091505092915050565b5f6040820190506114165f830185610d9f565b8181036020830152611428818461137b565b90509392505050565b5f8151905061143f81610d37565b92915050565b5f6020828403121561145a57611459610c2d565b5b5f61146784828501611431565b91505092915050565b5f819050919050565b61148281611470565b811461148c575f80fd5b50565b5f8151905061149d81611479565b92915050565b5f602082840312156114b8576114b7610c2d565b5b5f6114c58482850161148f565b91505092915050565b7f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000005f82015250565b5f611502601683611091565b915061150d826114ce565b602082019050919050565b5f6020820190508181035f83015261152f816114f6565b9050919050565b602082015f82015161154a5f8501826112c0565b50505050565b5f6020820190506115635f830184611536565b92915050565b7f43616e6e6f74207472616e7366657220746f2073656c660000000000000000005f82015250565b5f61159d601783611091565b91506115a882611569565b602082019050919050565b5f6020820190508181035f8301526115ca81611591565b905091905056fea26469706673582212200fa133e38ed23a90861d6b6d04ce756e2f5ddd44da83945d0eb0d6a05c78ca5364736f6c63430008140033";

type CrossChainNameServiceRegisterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainNameServiceRegisterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainNameServiceRegister__factory extends ContractFactory {
  constructor(...args: CrossChainNameServiceRegisterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    router: PromiseOrValue<string>,
    lookup: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrossChainNameServiceRegister> {
    return super.deploy(
      router,
      lookup,
      overrides || {}
    ) as Promise<CrossChainNameServiceRegister>;
  }
  override getDeployTransaction(
    router: PromiseOrValue<string>,
    lookup: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(router, lookup, overrides || {});
  }
  override attach(address: string): CrossChainNameServiceRegister {
    return super.attach(address) as CrossChainNameServiceRegister;
  }
  override connect(signer: Signer): CrossChainNameServiceRegister__factory {
    return super.connect(signer) as CrossChainNameServiceRegister__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainNameServiceRegisterInterface {
    return new utils.Interface(_abi) as CrossChainNameServiceRegisterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainNameServiceRegister {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CrossChainNameServiceRegister;
  }
}
